{
  "env": {
    "browser": true,
    "es2021": true
  },
  "extends": [
    // 使用 ESLint 推荐的基本规则
    // react-app 已包含 eslint:recommended
    // "eslint:recommended",
    // "plugin:@typescript-eslint/recommended" 是 "@typescript-eslint/eslint-plugin" 插件提供的一组推荐规则，用于检查和规范 TypeScript 代码。
    // 使用 TypeScript ESLint 推荐的规则
    "plugin:@typescript-eslint/recommended",
    // 使用 React 插件推荐的规则
    // "plugin:react/recommended",
    // "react-app" 配置项是 Create React App 项目中预定义的扩展配置之一。当你使用 Create React App 创建一个新的 React 项目时，它会自动生成一个默认的 .eslintrc.json 文件，并将 "react-app" 添加到 extends 配置中。
    "react-app",
    // "prettier" 配置在 extends 中用于禁用与 Prettier 冲突的规则，而 "plugin:prettier/recommended" 配置在 extends 中用于集成 ESLint 和 Prettier
    // "prettier"

    // 在 ESLint 的配置中，不需要同时在 extends 和 plugins 中引入 "prettier"。

    // 这个配置是通过 "eslint-plugin-prettier" 插件提供的规则集。它集成了 ESLint 和 Prettier，以确保代码风格和格式的一致性。它会自动运行 Prettier，并使用 Prettier 的配置来格式化代码。该规则集会检查代码中与格式相关的问题，并通过运行 Prettier 来修复这些问题。这样，你就可以使用 ESLint 进行代码静态分析和规则验证，同时确保代码格式符合 Prettier 的要求。
    "plugin:prettier/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "overrides": [],
  // 指定 javaScript 语言类型和风格
  "parserOptions": {
    "ecmaVersion": "latest",
    "sourceType": "module"
  },
  // 用于运行 Prettier 规则
  "plugins": ["@typescript-eslint", "react", "prettier"],
  "rules": {
    "no-unused-vars": "warn",
    // 关闭 Vscode 的 prettier 验证(防止 Vscode 的 prettier 冲突)
    "prettier/prettier": "error",
    // "jsx-quotes": "warn"
    "@typescript-eslint/ban-ts-comment": "off"
  }
}
